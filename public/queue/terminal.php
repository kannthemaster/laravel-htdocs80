<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Terminal Display</title>
    <!-- Bootstrap CSS -->
    <link href="assets/css/bootstrap.min.css" rel="stylesheet">
    <!-- <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet"> -->
    <!-- <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+Thai:wght@100..900&family=Sriracha&display=swap" rel="stylesheet"> -->
     <!-- jQuery -->
    <script src="assets/js/jquery-3.6.0.min.js"></script>
    <!-- <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script> -->
    
    <style>
       
       @font-face {
    font-family: 'Noto Sans Thai';
    src: url('assets/fonts/NotoSansThai-Regular.woff2') format('woff2'),
         url('assets/fonts/NotoSansThai-Regular.woff') format('woff');
  }
  @font-face {
    font-family: 'Sriracha';
    src: url('assets/fonts/Sriracha-Regular.woff2') format('woff2'),
         url('assets/fonts/Sriracha-Regular.woff') format('woff');
  }
        body {
        
            font-family: "Noto Sans Thai", sans-serif;
            font-optical-sizing: auto;
            font-weight: <weight>;
            font-style: normal;
            font-variation-settings:
            "wdth" 100;

        }
        h1 {
            font-size: 3em; /* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡πâ‡πÉ‡∏´‡∏ç‡πà‡∏Ç‡∏∂‡πâ‡∏ô */
            font-weight: 700; /* ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏´‡∏ô‡∏≤‡∏Ç‡∏∂‡πâ‡∏ô */
            margin-bottom: 20px;
        }
        h3 {
            font-size: 2em; /* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡πâ‡πÉ‡∏´‡∏ç‡πà‡∏Ç‡∏∂‡πâ‡∏ô */
            font-weight: 400;
        }

        body {
            background: linear-gradient(135deg, #1e3c72,rgb(2, 27, 71));
            background-color: #323232;
            color: #fff;
            margin: 0;
            padding: 0;
            height: 100vh;
            display: flex;
            flex-direction: row; /* ‡∏à‡∏±‡∏î‡πÉ‡∏´‡πâ‡∏´‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô */
            justify-content: flex-start;
            align-items: flex-start;
            flex-wrap: nowrap; /* ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏¢‡πâ‡∏≤‡∏¢‡∏´‡πâ‡∏≠‡∏á */
            overflow-x: auto; /* ‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ã‡πâ‡∏≤‡∏¢‡∏Ç‡∏ß‡∏≤‡πÑ‡∏î‡πâ‡∏ñ‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏°‡∏≤‡∏Å */
        }
        #clock-container {
            font-size: 4rem;
            font-weight: bold;
            letter-spacing: 0.1em;
            text-shadow: 0 4px 8px rgba(0, 0, 0, 0.2), 0 0 15px rgba(255, 255, 255, 0.4);
            border: 4px solid rgba(255, 255, 255, 0.5);
            border-radius: 15px;
            padding: 20px 40px;
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);
            position: relative;
            overflow: hidden;
            animation: glow 2.5s infinite alternate;
        }
        #date-container {
            font-size: 2rem;
            font-weight: bold;
            letter-spacing: 0.1em;
            text-shadow: 0 4px 8px rgba(0, 0, 0, 0.2), 0 0 15px rgba(255, 255, 255, 0.4);
            border-radius: 15px;
            padding: 20px 40px;
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            
            position: relative;
            
        }
        .top-section {
            display: flex;
            justify-content: space-between;
            align-items: center;
            width: 100%;
            gap: 20px;
        }
        .qr-code {
            width: 400px;
            height: 150px;
            
            border-radius: 10px;
            display: flex;
            justify-content: center;
            align-items: center;
            
        }
        .qr-code img {
            width: 100%;
            height: 100%;
            border-radius: 10px;
        }
        /* ‡πÅ‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏á‡πÄ‡∏£‡∏∑‡∏≠‡∏á */
        @keyframes glow {
            from {
                box-shadow: 0 8px 10px rgba(0, 0, 0, 0.3), 0 0 12px rgba(255, 255, 255, 0.5);
            }
            to {
                box-shadow: 0 8px 10px rgba(0, 0, 0, 0.3), 0 0 22px rgba(255, 255, 255, 0.8);
            }
        }
        /* ‡πÅ‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡∏ô‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç */
        .digit {
            display: inline-block;
            transform: scale(1);
            transition: transform 0.5s ease, color 0.5s ease;
        }
        .digit.update {
            transform: scale(1.0);
            color: #ffcc00;
        }
        .room {
            width: 300px; /* ‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡πâ‡∏≠‡∏á‡∏Ñ‡∏á‡∏ó‡∏µ‡πà */
            margin: 10px;
            padding: 20px;
            border: 2px solid #fff;
            border-radius: 10px;
            position: relative;
            color: #fff;
            box-sizing: border-box;
            height: auto; /* ‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á */
        }

        .room h2 {
            text-align: center;
        }

        .queue {
            display: flex;
            justify-content: space-between;
            margin: 5px 0;
            padding: 10px;
            border-radius: 5px;
            background-color: #191919;
            color: #fff;
        }

        .queue.waiting {
    background-color:rgb(194, 75, 75); /* ‡∏™‡∏µ‡πÅ‡∏î‡∏á */
    color: #fff;
    animation: blink-red 1s infinite; /* ‡∏Å‡∏£‡∏∞‡∏û‡∏£‡∏¥‡∏ö‡∏™‡∏µ‡πÅ‡∏î‡∏á */
}

.queue.called {
    background-color:rgb(131, 131, 131); /* ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß */
    color: #000; /* ‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏™‡∏µ‡∏î‡∏≥ */
    animation: blink-green 1s infinite; /* ‡∏Å‡∏£‡∏∞‡∏û‡∏£‡∏¥‡∏ö‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß */
}

/* ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏û‡∏£‡∏¥‡∏ö‡∏™‡∏µ‡πÅ‡∏î‡∏á */
@keyframes blink-red {
    50% {
        background-color:rgb(195, 76, 76);
    }
}

/* ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏û‡∏£‡∏¥‡∏ö‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß */
@keyframes blink-green {
    50% {
        background-color:rgb(121, 121, 121);
    }
}


        .queue.empty {
            background-color: #191919;
            text-align: center;
            width: 100%;
            padding: 10px;
            font-style: italic;
            font-size: 14px;
        }

        @keyframes blink {
            50% {
                background-color: #ff8888;
            }
        }

        /* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏´‡πâ‡∏≠‡∏á */
        @media (max-width: 767px) {
            .room {
                width: 100%;
            }
        }

/* ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏´‡πâ‡∏≠‡∏á‡πÉ‡∏ô‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô */
#room-container {
    background-color: #191919;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap; /* ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≤‡∏Å nowrap ‡πÄ‡∏õ‡πá‡∏ô wrap ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏Ç‡∏∂‡πâ‡∏ô‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏î‡πâ */
    justify-content: center; /* üî∏ ‡∏à‡∏±‡∏î‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏•‡∏π‡∏Å‡∏ï‡∏£‡∏á‡∏Å‡∏•‡∏≤‡∏á‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô */
    border-radius: 30px;
    overflow-x: auto;
    padding: 20px;
    width: 100%;
    gap: 20px; /* üî∏ ‡∏£‡∏∞‡∏¢‡∏∞‡∏´‡πà‡∏≤‡∏á‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏´‡πâ‡∏≠‡∏á */
}
.room {
    
    border-radius: 12px;
    padding: 16px;
    min-width: 280px;
    max-width: 320px;
    text-align: center;
    box-shadow: 0 0 10px rgba(255, 255, 255, 0.05);
}

/* ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏´‡πâ‡∏≠‡∏á */
#room-box {
    display: flex;
    flex-direction: column;
    align-items: center; /* ‚úÖ ‡∏à‡∏±‡∏î‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡πÑ‡∏ß‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏•‡∏≤‡∏á‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô */
    margin: 0 10px;
    min-width: 220px; /* ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏´‡∏î */
    background: #2a2a2a;
    border-radius: 20px;
    padding: 16px;
    color: white;
        justify-content: flex-start; /* ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ space-around ‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏≤‡∏Å‡πÉ‡∏´‡πâ‡πÄ‡∏ß‡πâ‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ó‡πà‡∏≤‡πÜ ‡∏Å‡∏±‡∏ô */
}
/* ‡∏ã‡πà‡∏≠‡∏ô Scroll Bar */
.queue-list {
    max-height: calc(4 * 80px); /* ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö 4 ‡∏Ñ‡∏¥‡∏ß */
    overflow-y: scroll; /* ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á */
    display: flex;
    flex-direction: column;
    gap: 0px; /* ‡∏£‡∏∞‡∏¢‡∏∞‡∏´‡πà‡∏≤‡∏á‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Ñ‡∏¥‡∏ß */
    scrollbar-width: none; /* ‡∏ã‡πà‡∏≠‡∏ô Scroll Bar ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Firefox */
}

.queue-list::-webkit-scrollbar {
    display: none; /* ‡∏ã‡πà‡∏≠‡∏ô Scroll Bar ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Chrome, Safari ‡πÅ‡∏•‡∏∞ Edge */
}

/* ‡∏Ñ‡∏¥‡∏ß‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ */
.queue-item {
    background-color: #ff4d4d; /* ‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á */
    color: #fff; /* ‡∏™‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° */
    border-radius: 5px;
    text-align: center;
    line-height: 80px; /* ‡∏à‡∏±‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏•‡∏≤‡∏á‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á */
    height: 80px; /* ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏¥‡∏ß */
    font-size: 16px; /* ‡∏Ç‡∏ô‡∏≤‡∏î‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£ */
}

        .scrolling-text {
            width: 100%;
            white-space: nowrap;
            overflow: hidden;
            box-sizing: border-box;
            
            color: #fff;
            font-size: 3rem;
            font-weight: bold;
            padding: 10px 0;
            position: relative;
        }
        .scrolling-text span {
            display: inline-block;
            padding-left: 100%; /* ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ô‡∏≠‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠ */
            animation: scroll 80s linear infinite; /* ‡∏ó‡∏≥‡πÅ‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡∏ô‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô */
        }
        @keyframes scroll {
            from {
                transform: translateX(0); /* ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô */
            }
            to {
                transform: translateX(-100%); /* ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏õ‡∏ó‡∏≤‡∏á‡∏ã‡πâ‡∏≤‡∏¢‡∏à‡∏ô‡∏û‡πâ‡∏ô‡∏à‡∏≠ */
            }
        }
        .header-container {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 20px; /* ‡∏£‡∏∞‡∏¢‡∏∞‡∏´‡πà‡∏≤‡∏á‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° */
}

.logo-container img {
    height: 95px; /* ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡πÇ‡∏•‡πÇ‡∏Å‡πâ */
    filter: drop-shadow(0px 0px 0px rgba(255, 255, 255, 0.8)); /* ‡πÅ‡∏™‡∏á‡∏™‡∏µ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á */
}

.text-container {
    text-align: left;
}

    </style>
    
</head>
<body>
<div class="container-fluid text-center mt-4">
<div class="header-container">
        <div class="logo-container">
            <img src="https://192.168.1.250/public/queue/assets/logo-‡∏Å‡∏£‡∏°-2566.png" alt="Logo 1">
            <img src="https://192.168.1.250/public/queue/assets/50 ‡∏õ‡∏µ-01.png" alt="Logo 2">
        </div>
        <div class="text-container">
            <h3>‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏ä‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô</h3>
            <h3>Preventive Medicine Service Center</h3>
            <h4>‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡πÇ‡∏£‡∏Ñ‡∏ó‡∏µ‡πà 1 ‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà | Office of Disease Prevention and Control 1 Chiang Mai</h4>
        </div>
    </div><!-- <div class="text-center mb-3">
    <button class="btn btn-secondary" id="fullscreen-btn">Toggle Fullscreen</button>
</div> -->
    <div class="container-fluid text-center mt-4" id="room-container">
        <!-- ‡∏à‡∏∞‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏¥‡∏ß‡πÉ‡∏ô‡∏ô‡∏µ‡πâ -->
    </div>
    <br>
       
        <!-- ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ô‡∏≤‡∏¨‡∏¥‡∏Å‡∏≤‡πÅ‡∏•‡∏∞ QR Code -->
        <div class="top-section">
            <div id="clock-container">00:00:00</div>
            <div id="date-container">January 1, 2024</div>
            <div class="qr-code">
                <img src="https://192.168.1.250/public/queue/assets/@352bavoo.png" alt="QR Code">
            </div>
        </div>
        
        <div class="scrolling-text">
        <span>
        ‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏ä‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô | Preventive Medicine Service Center | ‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡πÇ‡∏£‡∏Ñ‡∏ó‡∏µ‡πà 1 ‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà | Office of Disease Prevention and Control 1 Chiang Mai | ‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå/tel: 053-140774 ‡∏ñ‡∏∂‡∏á/to 6 | Line: @352bavoo
        </span>
    </div>
    </div>
    <div id="queue-modal" class="modal-overlay" style="display: none;">
    <div class="modal-content"> 
        <div class="logo-container">
            <img src="https://192.168.1.250/public/queue/assets/logo-‡∏Å‡∏£‡∏°-2566.png" alt="Logo 1">
            <img src="https://192.168.1.250/public/queue/assets/50 ‡∏õ‡∏µ-01.png" alt="Logo 2"> 
</div>
    <h1 id="modal-queue-number" style="color: green;">Queue 1</h1>
        <h2 id="modal-room-number">Room 1</h2>
    </div>
</div>
<style>
/* ‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏á */
.modal-overlay {
    display: none; /* ‡∏ã‡πà‡∏≠‡∏ô‡πÇ‡∏î‡∏¢‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô */
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.7);
    z-index: 1000;
    display: flex;
    justify-content: center;
    align-items: center;
    animation: fadeIn 1.5s ease-in-out;
}



/* ‡∏™‡πÑ‡∏ï‡∏•‡πå‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ */
.modal-content {
    background: white;
    border-radius: 15px;
    padding: 100px 50px;
    text-align: center;
    color: #000;
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.5);
}

.modal-content h1 {
    font-size: 10rem;
    font-weight: bold;
    margin-bottom: 20px;
}

.modal-content h2 {
    font-size: 6rem;
    font-weight: normal;
}

/* ‡πÅ‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡∏ô */
@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}
@keyframes fadeOut {
    from {
        opacity: 1;
    }
    to {
        opacity: 0;
    }
}
@keyframes blink {
    0% { color: green; } /* ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏≠‡πà‡∏≠‡∏ô */
    25% { color: green; } /* ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏≠‡πà‡∏≠‡∏ô */
    50% { color: rgb(92, 245, 21); } /* ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡πÄ‡∏Ç‡πâ‡∏° */
    75% { color: green; } 
    100% { color: green; } /* ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏≠‡πà‡∏≠‡∏ô */
}
#modal-room-number {
    color: red;
}
#modal-queue-number {
    animation: blink 1.0s infinite; /* ‡∏Å‡∏£‡∏∞‡∏û‡∏£‡∏¥‡∏ö‡∏ó‡∏∏‡∏Å 1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ */
}
#queue-modal {
    display: none; /* ‡∏ã‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô */
    opacity: 0;
    transition: opacity 1s ease-out;
}

</style>

<script>
    // // ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö WebSocket Server
    // const socket = new WebSocket('ws://localhost:8080');

    // // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
    // socket.onopen = function(event) {
    //     console.log("WebSocket connection established");
    // };

    // // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å WebSocket
    // socket.onmessage = function(event) {
    //     const data = JSON.parse(event.data);
    //     console.log("Received data from WebSocket:", data);
        
    //     // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏Ñ‡∏¥‡∏ß‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö
    //     updateRooms(data);
        
    //     // ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏Ñ‡∏¥‡∏ß‡πÉ‡∏´‡∏°‡πà, ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
    //     data.forEach(room => {
    //         room.forEach(queue => {
    //             if (queue.status === "called" && queue.call_count > 0) {
    //                 playSound(queue.queue_number, queue.room_number);
    //             }
    //         });
    //     });
    // };

    // // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
    // socket.onerror = function(error) {
    //     console.error("WebSocket Error:", error);
    // };

    // // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ñ‡∏π‡∏Å‡∏õ‡∏¥‡∏î
    // socket.onclose = function(event) {
    //     console.log("WebSocket connection closed", event);
    // };

    function showQueueModal(queueNumber, roomNumber) {
        const modal = document.getElementById("queue-modal");
        const queueDisplay = document.getElementById("modal-queue-number");
        const roomDisplay = document.getElementById("modal-room-number");

        queueDisplay.textContent = `Queue ${queueNumber}`;
        roomDisplay.textContent = `Room/‡∏´‡πâ‡∏≠‡∏á ${roomNumber}`;

        // ‡πÅ‡∏™‡∏î‡∏á modal ‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡πÉ‡∏´‡πâ opacity ‡πÄ‡∏õ‡πá‡∏ô 1
        modal.style.display = "flex";
    }

    let soundQueue = []; // ‡∏Ñ‡∏¥‡∏ß‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á
    let lastCallCounts = {}; // ‡πÄ‡∏Å‡πá‡∏ö call_count ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏¥‡∏ß
    let isSoundPlaying = false; // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡πà‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    let voices = [];

    speechSynthesis.onvoiceschanged = function() {
        voices = speechSynthesis.getVoices();
    };

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á
    function playSound(queueNumber, roomNumber) {
        soundQueue.push({ queueNumber, roomNumber });
        processSoundQueue();
    }

    function processSoundQueue() {
        if (isSoundPlaying || soundQueue.length === 0) return; // ‡∏´‡∏¢‡∏∏‡∏î‡∏ñ‡πâ‡∏≤‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡πà‡∏ô‡∏≠‡∏¢‡∏π‡πà
        isSoundPlaying = true; // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ß‡πà‡∏≤‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡πà‡∏ô

        const { queueNumber, roomNumber } = soundQueue.shift(); // ‡∏î‡∏∂‡∏á‡∏Ñ‡∏¥‡∏ß‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Ñ‡∏¥‡∏ß‡∏•‡∏≥‡∏î‡∏±‡∏ö‡πÅ‡∏£‡∏Å

        const textThai = `‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç, ${queueNumber}, ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç, ${queueNumber}, ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏±‡∏ö‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏´‡πâ‡∏≠‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç, ${roomNumber}`;
        // const textThai = `‡∏ú‡∏π‡πâ‡∏Æ‡∏±‡∏ö‡∏ö‡∏£‡∏¥‡∏Å‡πà‡∏≤‡∏£‡∏´‡∏°‡πà‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç, ${queueNumber}, ‡∏´‡∏°‡πà‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç, ${queueNumber}, ‡πÄ‡∏Ñ‡πà‡∏≤‡∏Æ‡∏±‡∏ö‡∏ö‡∏£‡∏¥‡∏Å‡πà‡∏≤‡∏£‡∏ï‡∏µ‡πâ‡∏´‡πâ‡∏≠‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏´‡∏°‡πà‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç, ${roomNumber}`;
        const textEnglish = `Queue number, ${queueNumber}, Queue number, ${queueNumber}, please proceed to room number, ${roomNumber}.`;

        // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏û‡∏π‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á
        function speak(text, lang, rate, pitch, voiceName) {
            const msg = new SpeechSynthesisUtterance(text);
            const voices = speechSynthesis.getVoices();
            const selectedVoice = voices.find(voice => voice.name.includes(voiceName));
            
            if (selectedVoice) {
                msg.voice = selectedVoice; // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
            } else {
                console.warn(`‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏™‡∏µ‡∏¢‡∏á: ${voiceName}`);
            }

            msg.lang = lang;
            msg.rate = rate;
            msg.pitch = pitch;

            return msg;
        }

        // ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
        const notificationSound = new Audio('notification-sound.mp3');
        notificationSound.play().catch((error) => {
            console.log("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô: ", error);
        });

        // ‡πÅ‡∏™‡∏î‡∏á Modal ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
        showQueueModal(queueNumber, roomNumber);

        // notificationSound.onended = function () {
        //     // ‡∏û‡∏π‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
        //     const thaiMsg = speak(textThai, "th-TH", 1.0, 1.1, "Microsoft Pattara - Thai (Thailand))");
        //     thaiMsg.onend = function () {
        //         // ‡∏û‡∏π‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡∏à‡∏ö
        //         const englishMsg = speak(textEnglish, "en-US", 0.9, 1.2, "Microsoft Zira - English (United States)");
        //         englishMsg.onend = function () {
        //             isSoundPlaying = false; // ‡∏õ‡∏•‡∏î‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏™‡∏µ‡∏¢‡∏á
        //             processSoundQueue(); // ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÉ‡∏ô‡∏Ñ‡∏¥‡∏ß‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
        //         };
        //         speechSynthesis.speak(englishMsg);
        //     };
        //     speechSynthesis.speak(thaiMsg);
        // };
        notificationSound.onended = function () {
            // ‡∏û‡∏π‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
            const thaiMsg = speak(textThai, "th-TH", 1.0, 1.1, "Microsoft Premwadee Online (Natural) - Thai (Thailand)");
            thaiMsg.onend = function () {
                // ‡∏û‡∏π‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡∏à‡∏ö
                const englishMsg = speak(textEnglish, "en-US", 0.9, 1.2, "Microsoft Aria Online (Natural) - English (United States)");
                englishMsg.onend = function () {
                    isSoundPlaying = false; // ‡∏õ‡∏•‡∏î‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏™‡∏µ‡∏¢‡∏á
                    processSoundQueue(); // ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÉ‡∏ô‡∏Ñ‡∏¥‡∏ß‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
                };
                speechSynthesis.speak(englishMsg);
            };
            speechSynthesis.speak(thaiMsg);
        };
    }

    function hideQueueModal() {
        const modal = document.getElementById("queue-modal");

        // ‡πÄ‡∏ä‡πá‡∏Å‡∏Å‡πà‡∏≠‡∏ô‡∏ß‡πà‡∏≤ modal ‡∏¢‡∏±‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÑ‡∏´‡∏°
        if (!modal || modal.style.display === "none") return;

        // ‡πÄ‡∏£‡∏¥‡πà‡∏° fade out
        modal.style.transition = "opacity 1s ease-out";
        modal.style.opacity = "0";

        // ‡∏£‡∏≠‡πÉ‡∏´‡πâ fade out ‡πÄ‡∏™‡∏£‡πá‡∏à ‡∏Ñ‡πà‡∏≠‡∏¢‡∏ã‡πà‡∏≠‡∏ô modal
        setTimeout(() => {
            modal.style.display = "none";
        }, 1000);
    }

    function showQueueModal(queueNumber, roomNumber) {
        const modal = document.getElementById("queue-modal");
        const queueDisplay = document.getElementById("modal-queue-number");
        const roomDisplay = document.getElementById("modal-room-number");

        queueDisplay.textContent = `Queue ${queueNumber}`;
        roomDisplay.textContent = `Room/‡∏´‡πâ‡∏≠‡∏á ${roomNumber}`;
        // ‡πÅ‡∏™‡∏î‡∏á modal ‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡πÉ‡∏´‡πâ opacity ‡πÄ‡∏õ‡πá‡∏ô 1
        modal.style.display = "flex";
        modal.style.opacity = "1";
        modal.style.transition = "opacity 1.5s ease-in";

        // ‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏´‡πâ modal fade out ‡∏´‡∏•‡∏±‡∏á 15 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
        setTimeout(hideQueueModal, 15500);
    }

    speechSynthesis.onvoiceschanged = function() {
        console.log(speechSynthesis.getVoices());
    };

    let isFirstLoad = true; // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    let lastPlayedQueue = {}; // ‡πÄ‡∏Å‡πá‡∏ö queue_number ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
    let manualCallQueues = {}; // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡∏¥‡∏ß‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏î‡πâ‡∏ß‡∏¢‡∏õ‡∏∏‡πà‡∏°
    let initialCallCounts = {}; // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏° call_count ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô

if (!document.getElementById("blinking-style")) {
    $("head").append(`<style id="blinking-style">
    .blinking-calling {
    font-size: 2.5rem;        /* ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡πÉ‡∏´‡∏ç‡πà‡∏Ç‡∏∂‡πâ‡∏ô */
    padding: 1rem 2rem;       /* ‡∏Ç‡∏¢‡∏≤‡∏¢‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏†‡∏≤‡∏¢‡πÉ‡∏ô */
    border-radius: 12px;      /* ‡∏°‡∏∏‡∏°‡πÇ‡∏Ñ‡πâ‡∏á‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô */
    border-width: 5px;        /* ‡∏Ç‡∏≠‡∏ö‡∏´‡∏ô‡∏≤‡∏Ç‡∏∂‡πâ‡∏ô */
    box-shadow: 0 0 20px rgba(0, 255, 0, 0.8); /* ‡πÄ‡∏á‡∏≤‡πÉ‡∏´‡∏ç‡πà‡∏Ç‡∏∂‡πâ‡∏ô */
    min-width: 200px;         /* ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥ */
    min-height: 150px;         /* ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥ */
    animation: blinkFlash 1.5s infinite;
    color: #fff;
    background-color: #00c853;
    font-weight: bold;
    border-radius: 12px;
    text-align: center;
    margin-bottom: 8px;
    border: 5px solid #00c853;
    display: flex;
flex-direction: column;
justify-content: center;
align-items: center;
    }

    @keyframes blinkFlash {
        0% {
            background-color: #00c853;
            border-color: #00c853;
            opacity: 1;
        }
        50% {
            background-color: #ffffff;
            color:rgb(255, 0, 0);
            border-color:rgb(255, 0, 0);
            box-shadow: 0 0 20px rgba(255, 0, 0, 0.9);
            opacity: 1;
        }
        100% {
            background-color: #00c853;
            border-color: #00c853;
            opacity: 1;
        }
    }
    </style>`);
}



    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏´‡πâ‡∏≠‡∏á‡∏ï‡∏£‡∏ß‡∏à
    function updateRooms(data) {
    const roomContainer = $("#room-container");
    const isScrolledToBottom = roomContainer.scrollTop() + roomContainer.innerHeight() >= roomContainer[0]?.scrollHeight;

    roomContainer.empty();
    const roomsToShow = [2, 3, 4, 6, 8];

    roomsToShow.forEach(roomNumber => {
        const roomDiv = $(`
            <div class="room" data-room-number="${roomNumber}">
                <h2>Room ${roomNumber} <br> ‡∏´‡πâ‡∏≠‡∏á‡∏ï‡∏£‡∏ß‡∏à ${roomNumber}</h2>
                <div class="queue-list"></div>
            </div>
        `);

        const queueList = roomDiv.find(".queue-list");

        if (data[roomNumber] && data[roomNumber].length > 0) {
            // üîΩ ‡πÅ‡∏¢‡∏Å‡∏Ñ‡∏¥‡∏ß is_calling ‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡∏Å‡πà‡∏≠‡∏ô ‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏≠‡∏¢‡∏ï‡∏≤‡∏°‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏¥‡∏ß‡∏≠‡∏∑‡πà‡∏ô
            const callingQueues = data[roomNumber].filter(q => q.is_calling == 1);
            const otherQueues = data[roomNumber].filter(q => q.is_calling != 1);

            const allQueues = [...callingQueues, ...otherQueues];

            allQueues.forEach(queue => {
                let queueClass = "queue";
                let statusText = "";

                if (queue.is_calling == 1) {
                    queueClass += " blinking-calling";
                    statusText = "Calling";
                } else if (queue.status === "called") {
                    queueClass += " called";
                    statusText = "Called";
                } else if (queue.status === "waiting") {
                    queueClass += " waiting";
                    statusText = "Waiting";
                }

                const queueDiv = $(`
                    <div class="${queueClass}" 
                        data-queue-number="${queue.queue_number}" 
                        data-call-count="${queue.call_count}">
                        <span>Queue ${queue.queue_number}</span>
                        <span>${statusText}</span>
                    </div>
                `);

                queueList.append(queueDiv);

                // ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡πà‡∏≤ call_count ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å
                if (isFirstLoad) {
                    if (!initialCallCounts[roomNumber]) {
                        initialCallCounts[roomNumber] = {};
                    }
                    initialCallCounts[roomNumber][queue.queue_number] = queue.call_count;
                }

                // ‚úÖ ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ñ‡∏¥‡∏ß‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏´‡∏°‡πà (‡πÑ‡∏°‡πà‡∏ô‡∏±‡∏ö call_count ‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤)
                if (!isFirstLoad && queue.status === "called" && queue.call_count > 0) {
                    if (lastCallCounts[roomNumber]?.[queue.queue_number] !== queue.call_count) {
                        if (queue.call_count > (initialCallCounts[roomNumber]?.[queue.queue_number] || 0)) {
                            playSound(queue.queue_number, roomNumber);
                        }

                        lastCallCounts[roomNumber] = lastCallCounts[roomNumber] || {};
                        lastCallCounts[roomNumber][queue.queue_number] = queue.call_count;
                    }
                }
            });
        } else {
            queueList.append('<div class="queue empty" style="display: flex; align-items: center; justify-content: center; height: 100%;">- ‡∏Ñ‡∏¥‡∏ß‡∏ß‡πà‡∏≤‡∏á -</div>');
        }

        roomContainer.append(roomDiv);
    });

    isFirstLoad = false;
}


    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏¥‡∏ß
    function checkUpdates() {
        $.get("fetch_queues_terminal.php", function (response) {
            const data = JSON.parse(response);
            updateRooms(data);

            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å modal ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ñ‡∏¥‡∏ß‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
        });
    }

    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å‡πÅ‡∏•‡∏∞‡∏ó‡∏∏‡∏Å‡πÜ 3 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
    checkUpdates();
    setInterval(checkUpdates, 3000);

    document.addEventListener('click', function () {
        const elem = document.documentElement; // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏á‡∏Ñ‡πå‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö <html> ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏ô‡πâ‡∏≤

        if (!document.fullscreenElement) {
            // ‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏´‡∏°‡∏î Fullscreen
            elem.requestFullscreen().catch(err => {
                alert(`Error attempting to enable full-screen mode: ${err.message} (${err.name})`);
            });
        }
    });

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ß‡∏•‡∏≤
    function updateClock() {
        const clockContainer = document.getElementById("clock-container");
        const now = new Date();
        const hours = String(now.getHours()).padStart(2, '0');
        const minutes = String(now.getMinutes()).padStart(2, '0');
        const seconds = String(now.getSeconds()).padStart(2, '0');
        const timeString = `${hours}:${minutes}:${seconds}`;

        // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡∏ô
        const digits = clockContainer.querySelectorAll(".digit");
        if (digits.length) {
            const newDigits = timeString.split("");
            digits.forEach((digit, index) => {
                if (digit.textContent !== newDigits[index]) {
                    digit.textContent = newDigits[index];
                    digit.classList.add("update");
                    setTimeout(() => digit.classList.remove("update"), 300); // ‡∏•‡∏ö‡∏Ñ‡∏•‡∏≤‡∏™‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡∏ô
                }
            });
        } else {
            // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏ó‡πá‡∏Å .digit
            clockContainer.innerHTML = timeString
                .split("")
                .map(char => `<span class="digit">${char}</span>`)
                .join("");
        }
    }

    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏∏‡∏Å 1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
    setInterval(updateClock, 1000);

    function updateDate() {
    const dateContainer = document.getElementById("date-container");
    const now = new Date();

    // ‡∏£‡∏±‡∏ö‡∏õ‡∏µ ‡∏Ñ.‡∏®. ‡πÅ‡∏•‡∏∞‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÉ‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©
    const year = now.getFullYear();
    const monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
    const month = monthNames[now.getMonth()]; // ‡∏£‡∏±‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©
    const date = String(now.getDate()).padStart(2, '0'); // ‡∏£‡∏±‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏°‡∏µ 2 ‡∏´‡∏•‡∏±‡∏Å

    const dateString = `${date} ${month} ${year}`; // ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: "March 31, 2025"

    dateContainer.textContent = dateString;  // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ô container
}

// ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏´‡∏•‡∏î
updateDate();

// ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô
setInterval(updateDate, 86400000);

</script>

</body>
</html>
